{
  "_args": [
    [
      {
        "raw": "crest@git+https://github.com/ledsun/crest.git",
        "scope": null,
        "escapedName": "crest",
        "name": "crest",
        "rawSpec": "git+https://github.com/ledsun/crest.git",
        "spec": "git+https://github.com/ledsun/crest.git",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:ledsun/crest.git",
          "sshUrl": "git+ssh://git@github.com/ledsun/crest.git",
          "httpsUrl": "git+https://github.com/ledsun/crest.git",
          "gitUrl": "git://github.com/ledsun/crest.git",
          "shortcut": "github:ledsun/crest",
          "directUrl": "https://raw.githubusercontent.com/ledsun/crest/master/package.json"
        }
      },
      "C:\\Users\\Ivano\\Desktop\\Serial-communication"
    ]
  ],
  "_from": "git+https://github.com/ledsun/crest.git",
  "_id": "crest@0.0.4",
  "_inCache": true,
  "_location": "/crest",
  "_phantomChildren": {},
  "_requested": {
    "raw": "crest@git+https://github.com/ledsun/crest.git",
    "scope": null,
    "escapedName": "crest",
    "name": "crest",
    "rawSpec": "git+https://github.com/ledsun/crest.git",
    "spec": "git+https://github.com/ledsun/crest.git",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:ledsun/crest.git",
      "sshUrl": "git+ssh://git@github.com/ledsun/crest.git",
      "httpsUrl": "git+https://github.com/ledsun/crest.git",
      "gitUrl": "git://github.com/ledsun/crest.git",
      "shortcut": "github:ledsun/crest",
      "directUrl": "https://raw.githubusercontent.com/ledsun/crest/master/package.json"
    }
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "git+https://github.com/ledsun/crest.git#2a0472e83af0e4e312fce6d5f351e9f8a8469b7e",
  "_shasum": "e8ee9913557c0ec211fa9d6cb936dbb419f7d372",
  "_shrinkwrap": null,
  "_spec": "crest@git+https://github.com/ledsun/crest.git",
  "_where": "C:\\Users\\Ivano\\Desktop\\Serial-communication",
  "author": {
    "name": "Ricard Aspeljung",
    "email": "ricard@opendia.se"
  },
  "bin": {
    "crest": "./bin/crest"
  },
  "bugs": {
    "url": "https://github.com/Cordazar/crest/issues"
  },
  "dependencies": {
    "mongodb": "1.2.x",
    "restify": "2.3.x"
  },
  "description": "REST Server for MongoDB",
  "devDependencies": {
    "mocha": "1.8.x",
    "supertest": "0.5.x"
  },
  "directories": {
    "lib": "./lib"
  },
  "engines": {
    "node": ">=0.8.0"
  },
  "gitHead": "2a0472e83af0e4e312fce6d5f351e9f8a8469b7e",
  "homepage": "https://github.com/cordazar/crest#readme",
  "keywords": [
    "mongodb",
    "mongo",
    "db",
    "rest",
    "restful",
    "api"
  ],
  "license": "MIT",
  "main": "server.js",
  "name": "crest",
  "optionalDependencies": {},
  "preferGlobal": true,
  "readme": "\r\n# Crest\r\n\r\n[Crest](http://github.com/cordazar/crest) is a REST API Server for MongoDB built in node.js.\r\n\r\n## About\r\n\r\nThe idea for crest was born when we needed a REST API for a MongoDB project at work and the ones we found were not what we expected from \r\n\r\nSo this is my attempt at building a small and easy to use REST API Server for MongoDB with primary focus on json. Since this is my first time building a REST API I'll appreciate any and all feedback.\r\n\r\nCrest stands for [Cygnus](http://en.wiktionary.org/wiki/Cygnus) REST.\r\n\r\n\r\n## Installation\r\n\r\n### Recommended way\r\n    npm install crest -g\r\n\r\nThis will install crest globally so that it may be run from the command line.\r\n\r\n### As node.js module\r\n    npm install crest\r\n\r\nThis will install crest as a module to be used as a part of some other project.\r\n\r\n### Clone with git\r\n    git clone git://github.com/Cordazar/crest.git\r\n\r\n\r\n## Usage\r\nIf installed globally you can just run\r\n\r\n    crest\r\n\r\n\r\n### Quick try\r\nAfter starting the server you can quickly try it out by issuing the following from the command line:\r\n\r\n    curl -d '{ \"Key\" : 42 }' -H \"Content-Type: application/json\" http://localhost:3500/test/example\r\n\r\nThis should add a document to the collection **example** in database **test** looking similar to this: \r\n\r\n    { \"Key\": 42, \"_id\": ObjectId(\"4e90e196b0c7f4687000000e\") }\r\n\r\n### Supported REST requests\r\n    GET /db/collection\r\nReturns all documents (query and options can be sent in GET body)\r\n\r\n    GET /db/collection?query=%7B%22isDone%22%3A%20false%7D\r\nReturns all documents satisfying query\r\n\r\n    GET /db/collection?query=%7B%22isDone%22%3A%20false%7D&limit=2&skip=2\r\nAbility to add options to query (limit, skip, etc)\r\n    \r\n    GET /db/collection/id\r\nReturns document with _id_\r\n    \r\n    POST /db/collection\r\nInsert new document in collection (document in POST body)\r\n    \r\n    PUT /db/collection/id\r\nUpdate document with _id_ (updated document in PUT body)\r\n    \r\n    DELETE /db/collection/\r\nDelete document with _id_\r\n\r\n### Content Type\r\nPlease make sure `application/json` is used as Content-Type when using POST/PUT/GET with data in request body.\r\n\r\n\r\n## Setup\r\n\r\n### Configuration parameters\r\n\r\nThese parameters are saved in __config.json__.\r\n\r\nDatabase settings where username and password are optional.\r\n\r\n    db [object]\r\n        host [string]\r\n        port [string]\r\n        username [string] (optional)\r\n        password [string] (optional)\r\n\r\nServer settings for where and how the rest api is going to be run.\r\n\r\n    server [object]\r\n        port [string] \r\n        address [string]\r\n\r\nGeneral settings\r\n\r\n    flavor [string] (mongodb or normal)\r\n    debug [boolean]\r\n\r\n#### Flavors\r\n* Choose **mongodb** as flavor to keep using *\\_id* as primary key for a document.\r\n* Choose **normal** as flavor if you want to change *\\_id* to *id*\r\n\r\n### Dependencies\r\nApplication dependencies are sorted under dependencies in _package.json_ while test dependencies are sorted under devDependencies. \r\n\r\n\r\n## Tests\r\nBasic tests are available and can be run via [mocha](http://visionmedia.github.com/mocha/). \r\n\r\nThese tests require a working mongodb installation and might require changes to __config.json__\r\n\r\nRecommended way to run mocha in terminal with mocha reporter _spec_ chosen.\r\n\r\n    mocha -R spec\r\n    \r\nMore indepth tests will be added at a later date. \r\n\r\n\r\n##Bugs\r\n\r\nIssues can be found at [https://github.com/cordazar/crest/issues](https://github.com/cordazar/crest/issues)\r\n\r\n\r\n## License\r\n  \r\nThe MIT License (MIT)\r\nCopyright (c) 2013 Ricard Aspeljung\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/cordazar/crest.git"
  },
  "scripts": {
    "start": "node server.js",
    "test": "mocha -R spec"
  },
  "version": "0.0.4"
}
